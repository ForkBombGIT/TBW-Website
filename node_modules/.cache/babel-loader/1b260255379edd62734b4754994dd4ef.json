{"ast":null,"code":"var _jsxFileName = \"/home/eros/Documents/coding/projects/TBW-Website/tbw-website/src/Components/CustomToolbar/CustomToolbar.jsx\";\nimport React from \"react\";\nimport { AppBar, Toolbar, Button, Typography } from \"@material-ui/core\";\nimport \"./CustomToolbar.scss\";\n\nconst CustomToolbar = ({\n  title,\n  options\n}) => React.createElement(AppBar, {\n  position: \"static\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, React.createElement(Toolbar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(Typography, {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, title), options.map((value, index) => {\n  return React.createElement(Button, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, value);\n})));\n\nexport default CustomToolbar;","map":{"version":3,"sources":["/home/eros/Documents/coding/projects/TBW-Website/tbw-website/src/Components/CustomToolbar/CustomToolbar.jsx"],"names":["React","AppBar","Toolbar","Button","Typography","CustomToolbar","title","options","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,mBAApD;AACA,OAAO,sBAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACpB,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,UAAD;AAAY,EAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+BD,KAA/B,CADF,EAEGC,OAAO,CAACC,GAAR,CAAY,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAC5B,SAAO,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,KAArB,CAAP;AACD,CAFA,CAFH,CADF,CADF;;AAWA,eAAeJ,aAAf","sourcesContent":["import React from \"react\";\nimport { AppBar, Toolbar, Button, Typography } from \"@material-ui/core\";\nimport \"./CustomToolbar.scss\";\n\nconst CustomToolbar = ({ title, options }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <Typography className=\"title\">{title}</Typography>\n      {options.map((value,index) => {\n        return <Button key={index}>{value}</Button>;\n      })}\n    </Toolbar>\n  </AppBar>\n);\n\nexport default CustomToolbar;\n"]},"metadata":{},"sourceType":"module"}